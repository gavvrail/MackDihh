@using FoodOrderingSystem.ViewModels
@model IEnumerable<UserRolesViewModel>

@{
    ViewData["Title"] = "Manage Users";
}

@section Styles {
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
}

<div class="admin-header">
    <div class="container">
        <h1>@ViewData["Title"]</h1>
        <p class="lead mb-0">View all registered users and their assigned roles.</p>
    </div>
</div>

<div class="container">
    <div class="card shadow-sm">
        <div class="card-body">
            <table class="table table-hover align-middle admin-table">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Roles</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>@user.Email</td>
                            <td>
                                @if (user.Roles.Any())
                                {
                                    @string.Join(", ", user.Roles)
                                }
                                else
                                {
                                    <span class="text-muted">No roles assigned</span>
                                }
                            </td>
                            <td class="text-end">
                                <button class="btn btn-sm btn-outline-primary btn-action" 
                                        onclick="manageRoles('@user.UserId', '@user.UserName')">
                                    Manage Roles
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Role Management Modal -->
<div class="modal fade" id="roleModal" tabindex="-1" aria-labelledby="roleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="roleModalLabel">Manage User Roles</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="roleForm" asp-action="UpdateUserRole" method="post">
                <div class="modal-body">
                    <input type="hidden" id="userId" name="userId" />
                    <p>Manage roles for user: <strong id="userName"></strong></p>
                    
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="adminRole" name="role" value="Admin">
                        <label class="form-check-label" for="adminRole">
                            Admin
                        </label>
                    </div>
                    
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="userRole" name="role" value="User" checked>
                        <label class="form-check-label" for="userRole">
                            User
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function manageRoles(userId, userName) {
            document.getElementById('userId').value = userId;
            document.getElementById('userName').textContent = userName;
            
            // Show the modal
            var modal = new bootstrap.Modal(document.getElementById('roleModal'));
            modal.show();
        }
        
        // Handle form submission
        document.getElementById('roleForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            var formData = new FormData(this);
            var userId = formData.get('userId');
            var role = formData.get('role');
            var isInRole = document.getElementById(role === 'Admin' ? 'adminRole' : 'userRole').checked;
            
            fetch('@Url.Action("UpdateUserRole", "Admin")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `userId=${userId}&role=${role}&isInRole=${isInRole}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error updating user role: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating the user role.');
            });
        });
    </script>
} 