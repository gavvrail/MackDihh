@model IEnumerable<FoodOrderingSystem.Models.Order>

@{
    ViewData["Title"] = "Manage Orders";
}

@Html.AntiForgeryToken()

@section Styles {
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
    <style>
        .admin-table {
            font-size: 0.9rem;
            min-width: 1400px;
        }
        .admin-table td {
            padding: 1rem 0.75rem !important;
            vertical-align: middle;
            white-space: nowrap;
            font-size: 0.9rem;
        }
        .admin-table th {
            padding: 1rem 0.75rem !important;
            font-weight: 600;
            border-bottom: 2px solid #dee2e6;
            font-size: 1rem;
            background: #007bff;
            color: white;
            text-shadow: 0 1px 2px rgba(0,0,0,0.1);
            border: none;
            white-space: nowrap;
        }
        .admin-table th i {
            opacity: 0.9;
        }
        .admin-table .btn-sm {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
            margin: 0.2rem;
        }
        /* Dropdown styles removed - using modal instead */
        .order-row {
            height: 80px;
            transition: all 0.2s ease;
            position: relative;
            z-index: 1;
        }
        .order-row:hover {
            background-color: #f8f9fa;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .actions-cell {
            min-width: 350px;
        }
        .admin-table tbody tr {
            position: relative;
        }
        .table-container {
            min-height: 500px;
            overflow-x: auto;
            overflow-y: visible;
        }
        .card {
            margin-bottom: 2rem;
        }
        .card-body {
            padding: 1.5rem;
        }
        .order-number-cell {
            max-width: 200px;
            word-wrap: break-word;
        }
        .customer-name-cell {
            max-width: 150px;
            word-wrap: break-word;
        }
        .address-cell {
            max-width: 200px;
            word-wrap: break-word;
            white-space: normal;
        }
        @@media (max-width: 1400px) {
            .admin-table {
                font-size: 0.9rem;
                min-width: 1200px;
            }
            .admin-table .btn-sm {
                padding: 0.4rem 0.8rem;
                font-size: 0.8rem;
            }
        }
    </style>
}

<div class="admin-header">
    <div class="container-fluid" style="max-width: 1600px; margin: 0 auto;">
        <h1>@ViewData["Title"]</h1>
        <p class="lead mb-0">View and manage all orders in the system.</p>
    </div>
</div>

<div class="container-fluid" style="max-width: 1600px; margin: 0 auto;">
    @Html.AntiForgeryToken()
    <!-- Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="status" class="form-label">Status Filter</label>
                    <select name="status" id="status" class="form-select">
                        <option value="">All Statuses</option>
                        <option value="Pending" selected="@(ViewBag.StatusFilter == "Pending")">Pending</option>
                        <option value="Confirmed" selected="@(ViewBag.StatusFilter == "Confirmed")">Confirmed</option>
                        <option value="Preparing" selected="@(ViewBag.StatusFilter == "Preparing")">Preparing</option>
                        <option value="Ready" selected="@(ViewBag.StatusFilter == "Ready")">Ready</option>
                        <option value="Delivering" selected="@(ViewBag.StatusFilter == "Delivering")">Delivering</option>
                        <option value="Delivered" selected="@(ViewBag.StatusFilter == "Delivered")">Delivered</option>
                        <option value="Cancelled" selected="@(ViewBag.StatusFilter == "Cancelled")">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="search" class="form-label">Search</label>
                    <input type="text" name="search" id="search" class="form-control" 
                           placeholder="Search by order number, customer, or address" 
                           value="@ViewBag.SearchTerm">
                </div>
                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <button type="submit" class="btn btn-primary w-100">Filter</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="card">
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive table-container">
                    <table class="table table-hover align-middle admin-table">
                        <thead class="table-primary">
                            <tr>
                                <th style="width: 18%; min-width: 180px;">
                                    <i class="fas fa-hashtag me-2"></i>Order Number
                                </th>
                                <th style="width: 12%; min-width: 120px;">
                                    <i class="fas fa-user me-2"></i>Customer Name
                                </th>
                                <th style="width: 15%; min-width: 150px;">
                                    <i class="fas fa-calendar me-2"></i>Order Date
                                </th>
                                <th style="width: 10%; min-width: 100px;">
                                    <i class="fas fa-info-circle me-2"></i>Status
                                </th>
                                <th style="width: 10%; min-width: 100px;">
                                    <i class="fas fa-money-bill me-2"></i>Total Amount
                                </th>
                                <th style="width: 8%; min-width: 80px;">
                                    <i class="fas fa-shopping-cart me-2"></i>Items
                                </th>
                                <th style="width: 27%; min-width: 350px;" class="actions-cell">
                                    <i class="fas fa-cogs me-2"></i>Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr class="order-row">
                                    <td class="order-number-cell">
                                        <strong>@order.OrderNumber</strong>
                                        @if (!string.IsNullOrEmpty(order.DeliveryAddress))
                                        {
                                            <br><small class="text-muted address-cell">@order.DeliveryAddress</small>
                                        }
                                    </td>
                                    <td class="customer-name-cell">@order.User?.UserName</td>
                                    <td>@order.OrderDate.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td>
                                        <span class="badge bg-@(order.Status switch {
                                            OrderStatus.Pending => "warning",
                                            OrderStatus.Confirmed => "info",
                                            OrderStatus.Preparing => "primary",
                                            OrderStatus.Ready => "success",
                                            OrderStatus.Delivering => "primary",
                                            OrderStatus.Delivered => "secondary",
                                            OrderStatus.Cancelled => "danger",
                                            _ => "light"
                                        })">
                                            @order.Status
                                        </span>
                                    </td>
                                    <td><strong>RM @order.Total.ToString("F2")</strong></td>
                                    <td>
                                        <small>
                                            @order.OrderItems.Count item@(order.OrderItems.Count != 1 ? "s" : "")
                                        </small>
                                    </td>
                                    <td>
                                        <div class="d-flex gap-1 flex-wrap">
                                            <!-- View Details Button -->
                                            <button type="button" class="btn btn-sm btn-outline-info" 
                                                    onclick="viewOrderDetails(@order.Id)">
                                                <i class="fas fa-eye me-1"></i>View
                                            </button>
                                            
                                            <!-- Status Update Button -->
                                            <button type="button" class="btn btn-sm btn-outline-primary" 
                                                    onclick="showStatusUpdateModal(@order.Id, '@order.OrderNumber', '@order.Status')">
                                                <i class="fas fa-edit me-1"></i>Update
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <p class="text-muted">No orders found matching your criteria.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Status Update Modal -->
<div class="modal fade" id="statusUpdateModal" tabindex="-1" aria-labelledby="statusUpdateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statusUpdateModalLabel">Update Order Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Order Number:</label>
                    <p class="form-control-plaintext" id="modalOrderNumber"></p>
                </div>
                <div class="mb-3">
                    <label class="form-label">Current Status:</label>
                    <span class="badge bg-primary" id="modalCurrentStatus"></span>
                </div>
                <div class="mb-3">
                    <label for="statusSelect" class="form-label">New Status:</label>
                    <select class="form-select" id="statusSelect">
                        <option value="Pending">Pending</option>
                        <option value="Confirmed">Confirmed</option>
                        <option value="Preparing">Preparing</option>
                        <option value="Ready">Ready</option>
                        <option value="Delivering">Delivering</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmStatusUpdate">Update Status</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentOrderId = null;
        
        // View order details function
        function viewOrderDetails(orderId) {
            console.log('Viewing order details for ID:', orderId);
            
            // Show loading content
            document.getElementById('orderDetailsContent').innerHTML = '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</div>';
            
            // Show the modal immediately
            const modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'), {
                backdrop: true,
                keyboard: true,
                focus: true
            });
            modal.show();
            
            // Ensure modal is properly centered after showing
            setTimeout(() => {
                const modalElement = document.getElementById('orderDetailsModal');
                if (modalElement) {
                    modalElement.style.display = 'block';
                    modalElement.classList.add('show');
                }
            }, 100);
            
            // Fetch order details
            fetch(`@Url.Action("GetOrderDetails", "Admin")/${orderId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const order = data.order;
                        document.getElementById('orderDetailsContent').innerHTML = `
                            <div class="row">
                                <div class="col-md-6">
                                    <h6><i class="fas fa-receipt me-2"></i>Order Information</h6>
                                    <p><strong>Order Number:</strong> ${order.orderNumber}</p>
                                    <p><strong>Customer:</strong> ${order.customerName}</p>
                                    <p><strong>Order Date:</strong> ${new Date(order.orderDate).toLocaleDateString()}</p>
                                    <p><strong>Status:</strong> <span class="badge bg-primary">${order.status}</span></p>
                                    <p><strong>Total:</strong> RM${order.total.toFixed(2)}</p>
                                </div>
                                <div class="col-md-6">
                                    <h6><i class="fas fa-map-marker-alt me-2"></i>Delivery Details</h6>
                                    <p><strong>Address:</strong> ${order.deliveryAddress || 'N/A'}</p>
                                    <p><strong>Phone:</strong> ${order.customerPhone || 'N/A'}</p>
                                    <p><strong>Instructions:</strong> ${order.deliveryInstructions || 'None'}</p>
                                </div>
                            </div>
                            <hr>
                            <h6><i class="fas fa-utensils me-2"></i>Order Items</h6>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Item</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        ${order.orderItems.map(item => `
                                            <tr>
                                                <td>${item.menuItemName}</td>
                                                <td>${item.quantity}</td>
                                                <td>RM${item.price.toFixed(2)}</td>
                                                <td>RM${(item.quantity * item.price).toFixed(2)}</td>
                                            </tr>
                                        `).join('')}
                                    </tbody>
                                </table>
                            </div>
                        `;
                    } else {
                        document.getElementById('orderDetailsContent').innerHTML = `
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Error loading order details: ${data.message}
                            </div>
                        `;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('orderDetailsContent').innerHTML = `
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            An error occurred while loading order details.
                        </div>
                    `;
                });
        }
        
        // Status update modal function
        function showStatusUpdateModal(orderId, orderNumber, currentStatus) {
            currentOrderId = orderId;
            document.getElementById('modalOrderNumber').textContent = orderNumber;
            document.getElementById('modalCurrentStatus').textContent = currentStatus;
            document.getElementById('statusSelect').value = currentStatus;
            
            // Show Bootstrap modal
            const modal = new bootstrap.Modal(document.getElementById('statusUpdateModal'));
            modal.show();
        }
        
        // Update order status function
        function updateOrderStatus(orderId, newStatus) {
            if (!orderId || !newStatus) {
                console.error('Missing orderId or newStatus');
                return;
            }

            // Show loading state
            const updateBtn = document.getElementById('confirmStatusUpdate');
            const originalText = updateBtn.innerHTML;
            updateBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Updating...';
            updateBtn.disabled = true;

            const formData = new FormData();
            formData.append('orderId', orderId);
            formData.append('newStatus', newStatus);
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

            fetch('@Url.Action("UpdateOrderStatus", "Admin")', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Hide modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('statusUpdateModal'));
                    if (modal) {
                        modal.hide();
                    }
                    
                    // Show success message
                    alert('Order status updated successfully!');
                    
                    // Reload the page
                    window.location.reload();
                } else {
                    alert('Error: ' + (data.message || 'Failed to update order status'));
                }
            })
            .catch(error => {
                console.error('Error updating order status:', error);
                alert('Error updating order status: ' + error.message);
            })
            .finally(() => {
                // Restore button state
                updateBtn.innerHTML = originalText;
                updateBtn.disabled = false;
            });
        }

        // Handle confirm status update
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('confirmStatusUpdate').addEventListener('click', function() {
                if (currentOrderId) {
                    const newStatus = document.getElementById('statusSelect').value;
                    updateOrderStatus(currentOrderId, newStatus);
                }
            });
        });
    </script>
} 