@model FoodOrderingSystem.Models.MenuItem

@{
    ViewData["Title"] = "Item Details";
}

@section Styles {
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
    <style>
        .menu-item-image {
            border: 2px solid #e9ecef;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .menu-item-image:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .image-container {
            position: relative;
            display: inline-block;
        }
        
        .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            border-radius: 0.375rem;
        }
        
        .image-container:hover .image-overlay {
            opacity: 1;
        }
        
        /* Custom Modal Styles */
        .custom-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 9999;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .custom-modal-backdrop {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            cursor: pointer;
        }
        
        .custom-modal-content {
            position: relative;
            background: white;
            border-radius: 8px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            max-width: 80vw;
            max-height: 90vh;
            display: flex;
            flex-direction: column;
            z-index: 10000;
        }
        
        .custom-modal-header {
            padding: 1rem;
            border-bottom: 1px solid #dee2e6;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .custom-modal-title {
            margin: 0;
            font-size: 1.25rem;
        }
        
        .custom-close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0.25rem;
            color: #6c757d;
        }
        
        .custom-close-btn:hover {
            color: #000;
        }
        
        .custom-modal-body {
            padding: 0;
            text-align: center;
            max-height: 70vh;
            overflow: hidden;
        }
        
        .custom-modal-image {
            max-width: 100%;
            max-height: 70vh;
            object-fit: contain;
        }
        
        .custom-modal-footer {
            padding: 1rem;
            border-top: 1px solid #dee2e6;
            display: flex;
            justify-content: flex-end;
            gap: 0.5rem;
        }
    </style>
}

<div class="admin-header">
    <div class="container">
        <h1>@ViewData["Title"]</h1>
        <p class="lead mb-0">Viewing details for "@Model.Name".</p>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow-sm">
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

                        <dt class="col-sm-3">Image</dt>
                        <dd class="col-sm-9">
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <div class="mb-3">
                                    <div class="image-container">
                                        <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded shadow-sm menu-item-image" style="max-width: 300px; max-height: 300px; object-fit: cover;" />
                                        <div class="image-overlay">
                                            <div class="text-center">
                                                <i class="fas fa-search-plus fa-2x mb-2"></i>
                                                <div>Click to view full size</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-muted small">
                                    <strong>Image URL:</strong> 
                                    <code class="bg-light px-2 py-1 rounded">@Html.DisplayFor(model => model.ImageUrl)</code>
                                </div>
                            }
                            else
                            {
                                <div class="text-muted d-flex align-items-center">
                                    <i class="fas fa-image me-2 fa-2x"></i>
                                    <div>
                                        <div class="fw-bold">No image available</div>
                                        <small>Upload an image to see it displayed here</small>
                                    </div>
                                </div>
                            }
                        </dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Description)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Description)</dd>

                        <dt class="col-sm-3">Price</dt>
                        <dd class="col-sm-9">RM@Model.Price.ToString("F2")</dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Category!.Name)</dd>
                    </dl>
                </div>
            </div>
            <div class="mt-4 d-grid gap-2 d-md-flex justify-content-md-end">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
</div>

    <!-- Custom Image Modal -->
    <div id="imageModal" class="custom-modal custom-modal-image" style="display: none;">
        <div class="custom-modal-backdrop"></div>
        <div class="custom-modal-content">
            <div class="custom-modal-header">
                <h5 class="custom-modal-title">@Model.Name - Full Size Image</h5>
                <button type="button" class="custom-close-btn" aria-label="Close">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="custom-modal-body">
                <img id="modalImage" src="" alt="@Model.Name" />
            </div>
            <div class="custom-modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal('imageModal')">Close</button>
                <a id="downloadImage" href="" download class="btn btn-primary">
                    <i class="fas fa-download me-1"></i>Download Image
                </a>
            </div>
        </div>
    </div>

@section Scripts {
    <script>
        // Image modal function
        function showImageModal(imgSrc, imgAlt) {
            const modalImage = document.getElementById('modalImage');
            const downloadLink = document.getElementById('downloadImage');
            
            if (modalImage && downloadLink) {
                modalImage.src = imgSrc;
                modalImage.alt = imgAlt;
                downloadLink.href = imgSrc;
                downloadLink.download = imgAlt.replace(/\s+/g, '_') + '.jpg';
                
                showCustomModal('imageModal');
            }
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            const imageContainer = document.querySelector('.image-container');
            
            if (imageContainer) {
                imageContainer.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    const img = this.querySelector('img');
                    if (img) {
                        showImageModal(img.src, img.alt);
                    }
                });
            }
        });
    </script>
}
