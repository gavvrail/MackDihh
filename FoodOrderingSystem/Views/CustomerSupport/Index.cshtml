@{
    ViewData["Title"] = "Customer Support";
}

@section Styles {
    <link rel="stylesheet" href="~/css/customer-support.css" asp-append-version="true" />
}

<div class="support-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="mb-0">
                                    <i class="fas fa-headset me-2"></i>Customer Support
                                </h4>
                                <small>We're here to help! Send us a message and we'll get back to you soon.</small>
                            </div>
                            <button class="btn btn-outline-light btn-sm" onclick="showTicketForm()">
                                <i class="fas fa-ticket-alt me-1"></i>Open Ticket
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chat-container">
                            <div class="chat-messages" id="chatMessages">
                                @if (ViewBag.Messages != null && ((List<ChatMessage>)ViewBag.Messages).Any())
                                {
                                    foreach (var message in (List<ChatMessage>)ViewBag.Messages)
                                    {
                                        <div class="message @(message.IsFromCustomer ? "customer" : "admin")">
                                            <div class="message-content">
                                                <div class="message-header">
                                                    <strong>@message.SenderName</strong>
                                                    <small class="text-muted">@message.Timestamp.ToString("MMM dd, yyyy HH:mm")</small>
                                                </div>
                                                <div class="message-text">@message.Message</div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="text-center text-muted py-4">
                                        <i class="fas fa-comments fa-3x mb-3"></i>
                                        <p>No messages yet. Start the conversation!</p>
                                    </div>
                                }
                            </div>
                            
                            <!-- Quick Response Buttons -->
                            <div class="quick-responses mb-3">
                                <small class="text-muted mb-2 d-block">Quick responses:</small>
                                <div class="d-flex flex-wrap gap-2">
                                    <button class="btn btn-outline-secondary btn-sm" onclick="sendQuickResponse('order')">
                                        <i class="fas fa-shopping-cart me-1"></i>Order Issue
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" onclick="sendQuickResponse('delivery')">
                                        <i class="fas fa-truck me-1"></i>Delivery Problem
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" onclick="sendQuickResponse('payment')">
                                        <i class="fas fa-credit-card me-1"></i>Payment Issue
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" onclick="sendQuickResponse('refund')">
                                        <i class="fas fa-undo me-1"></i>Refund Request
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" onclick="sendQuickResponse('account')">
                                        <i class="fas fa-user me-1"></i>Account Help
                                    </button>
                                </div>
                            </div>
                            
                            <div class="chat-input">
                                <div class="input-group">
                                    <input type="text" id="messageInput" class="form-control" placeholder="Type your message here..." maxlength="500">
                                    <button class="btn btn-primary" id="sendButton" type="button">
                                        <i class="fas fa-paper-plane"></i> Send
                                    </button>
                                </div>
                                <small class="text-muted">Press Enter to send</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ticket Form Modal -->
<div class="modal fade" id="ticketModal" tabindex="-1" aria-labelledby="ticketModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ticketModalLabel">
                    <i class="fas fa-ticket-alt me-2"></i>Open Support Ticket
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="ticketForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="ticketSubject" class="form-label">Subject</label>
                        <input type="text" class="form-control" id="ticketSubject" required placeholder="Brief description of your issue">
                    </div>
                    <div class="mb-3">
                        <label for="ticketCategory" class="form-label">Category</label>
                        <select class="form-select" id="ticketCategory" required>
                            <option value="">Select a category</option>
                            <option value="order">Order Issue</option>
                            <option value="delivery">Delivery Problem</option>
                            <option value="payment">Payment Issue</option>
                            <option value="refund">Refund Request</option>
                            <option value="account">Account Help</option>
                            <option value="technical">Technical Support</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="ticketPriority" class="form-label">Priority</label>
                        <select class="form-select" id="ticketPriority" required>
                            <option value="low">Low - General inquiry</option>
                            <option value="medium" selected>Medium - Standard issue</option>
                            <option value="high">High - Urgent issue</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="ticketDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="ticketDescription" rows="4" required 
                                  placeholder="Please provide detailed information about your issue..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane me-1"></i>Submit Ticket
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <script src="~/js/customer-support.js" asp-append-version="true"></script>
    <script>
        // Quick response messages
        const quickResponses = {
            'order': 'I have an issue with my order. Can you please help me?',
            'delivery': 'I\'m having a problem with my delivery. Please assist me.',
            'payment': 'I\'m experiencing a payment issue. Can you help resolve this?',
            'refund': 'I would like to request a refund for my recent order.',
            'account': 'I need help with my account settings or login issues.'
        };
        
        // Send quick response
        function sendQuickResponse(type) {
            const message = quickResponses[type];
            if (message) {
                document.getElementById('messageInput').value = message;
                document.getElementById('sendButton').click();
            }
        }
        
        // Show ticket form
        function showTicketForm() {
            const modal = new bootstrap.Modal(document.getElementById('ticketModal'));
            modal.show();
        }
        
        // Handle ticket form submission
        document.getElementById('ticketForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const subject = document.getElementById('ticketSubject').value;
            const category = document.getElementById('ticketCategory').value;
            const priority = document.getElementById('ticketPriority').value;
            const description = document.getElementById('ticketDescription').value;
            
            // Create a formatted message for the ticket
            const ticketMessage = `[TICKET] Subject: ${subject}\nCategory: ${category}\nPriority: ${priority}\n\nDescription:\n${description}`;
            
            // Send the ticket as a message
            document.getElementById('messageInput').value = ticketMessage;
            document.getElementById('sendButton').click();
            
            // Close modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('ticketModal'));
            modal.hide();
            
            // Reset form
            document.getElementById('ticketForm').reset();
        });
        
        // Auto-response system - now uses database
        async function checkForAutoResponse(message) {
            try {
                const response = await fetch(`/CustomerSupport/GetAutoResponse?message=${encodeURIComponent(message)}`);
                const data = await response.json();
                return data.response;
            } catch (error) {
                console.error('Error checking auto-response:', error);
                return null;
            }
        }
        
        // Enhanced message sending with auto-response
        const originalSendMessage = window.CustomerSupport?.sendMessage;
        if (originalSendMessage) {
            window.CustomerSupport.sendMessage = async function() {
                const message = this.messageInput.value.trim();
                const autoResponse = await checkForAutoResponse(message);
                
                if (autoResponse) {
                    // Show auto-response immediately
                    setTimeout(() => {
                        this.addMessage({
                            senderName: 'MackDihh Support',
                            message: autoResponse,
                            timestamp: new Date().toLocaleString(),
                            isFromCustomer: false
                        });
                    }, 1000);
                }
                
                // Call original send message function
                return originalSendMessage.call(this);
            };
        }
    </script>
}
