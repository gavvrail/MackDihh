@model FoodOrderingSystem.Models.Order

@{
    ViewData["Title"] = "Track Order";
}

@section Styles {
    <link rel="stylesheet" href="~/css/orders.css" asp-append-version="true" />
}

<div class="tracking-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0"><i class="fas fa-truck me-2"></i>Track Your Order</h4>
                    </div>
                    <div class="card-body">
                        <!-- Order Information -->
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h5>Order Details</h5>
                                <p><strong>Order Number:</strong> @Model.OrderNumber</p>
                                <p><strong>Order Date:</strong> @Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</p>
                                <p><strong>Total Amount:</strong> RM@(Model.Total.ToString("F2"))</p>
                            </div>
                            <div class="col-md-6">
                                <h5>Delivery Information</h5>
                                <p><strong>Address:</strong> @Model.DeliveryAddress</p>
                                <p><strong>Phone:</strong> @Model.PhoneNumber</p>
                                @if (!string.IsNullOrEmpty(Model.DeliveryInstructions))
                                {
                                    <p><strong>Instructions:</strong> @Model.DeliveryInstructions</p>
                                }
                            </div>
                        </div>

                        <!-- Order Status Timeline -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h5>Order Status</h5>
                                <div class="timeline">
                                    <div class="timeline-item @(Model.Status >= OrderStatus.Pending ? "completed" : "")">
                                        <div class="timeline-marker">
                                            <i class="fas fa-shopping-cart"></i>
                                        </div>
                                        <div class="timeline-content">
                                            <h6>Order Placed</h6>
                                            <p>Your order has been received and is being processed.</p>
                                            <small class="text-muted">@Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</small>
                                        </div>
                                    </div>

                                    <div class="timeline-item @(Model.Status >= OrderStatus.Confirmed ? "completed" : "")">
                                        <div class="timeline-marker">
                                            <i class="fas fa-check-circle"></i>
                                        </div>
                                        <div class="timeline-content">
                                            <h6>Order Confirmed</h6>
                                            <p>Your order has been confirmed and is being prepared.</p>
                                        </div>
                                    </div>

                                    <div class="timeline-item @(Model.Status >= OrderStatus.Preparing ? "completed" : "")">
                                        <div class="timeline-marker">
                                            <i class="fas fa-utensils"></i>
                                        </div>
                                        <div class="timeline-content">
                                            <h6>Preparing</h6>
                                            <p>Our chefs are preparing your delicious meal.</p>
                                        </div>
                                    </div>

                                    <div class="timeline-item @(Model.Status >= OrderStatus.Ready ? "completed" : "")">
                                        <div class="timeline-marker">
                                            <i class="fas fa-clock"></i>
                                        </div>
                                        <div class="timeline-content">
                                            <h6>Ready for Delivery</h6>
                                            <p>Your order is ready and waiting for pickup.</p>
                                        </div>
                                    </div>

                                    <div class="timeline-item @(Model.Status >= OrderStatus.OutForDelivery ? "completed" : "")">
                                        <div class="timeline-marker">
                                            <i class="fas fa-truck"></i>
                                        </div>
                                        <div class="timeline-content">
                                            <h6>Out for Delivery</h6>
                                            <p>Your order is on its way to you!</p>
                                        </div>
                                    </div>

                                    <div class="timeline-item @(Model.Status >= OrderStatus.Delivered ? "completed" : "")">
                                        <div class="timeline-marker">
                                            <i class="fas fa-home"></i>
                                        </div>
                                        <div class="timeline-content">
                                            <h6>Delivered</h6>
                                            <p>Your order has been delivered successfully.</p>
                                            @if (Model.ActualDeliveryTime.HasValue)
                                            {
                                                <small class="text-muted">@Model.ActualDeliveryTime.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Estimated Delivery Time -->
                        @if (Model.EstimatedDeliveryTime.HasValue)
                        {
                            <div class="row mb-4">
                                <div class="col-12">
                                    <div class="alert alert-info">
                                        <i class="fas fa-clock me-2"></i>
                                        <strong>Estimated Delivery Time:</strong> @Model.EstimatedDeliveryTime.Value.ToString("MMM dd, yyyy HH:mm")
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Enhanced Delivery Journey -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h5><i class="fas fa-route me-2"></i>Delivery Journey</h5>
                                <div class="delivery-journey-card">
                                    <div class="journey-header">
                                        <div class="route-info">
                                            <div class="route-point start-point">
                                                <i class="fas fa-store"></i>
                                                <div class="point-details">
                                                    <h6>MackDihh Restaurant</h6>
                                                    <small>Alamesra, Sabah</small>
                                                </div>
                                            </div>
                                            <div class="route-arrow">
                                                <i class="fas fa-arrow-right"></i>
                                                <span class="distance-info">~45km</span>
                                            </div>
                                            <div class="route-point end-point">
                                                <i class="fas fa-map-marker-alt"></i>
                                                <div class="point-details">
                                                    <h6>Your Location</h6>
                                                    <small>@Model.DeliveryAddress</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="journey-progress">
                                        <div class="progress-track">
                                            <div class="progress-fill @(Model.Status >= OrderStatus.OutForDelivery || (TimeZoneService.GetLocalTime() - TimeZoneService.ConvertFromUtc(Model.OrderDate)).TotalMinutes >= 20 ? "active" : "")" 
                                                 style="width: @(GetProgressPercentage(Model.Status))%"></div>
                                            
                                            <!-- Progress Points -->
                                            <div class="progress-point start @(Model.Status >= OrderStatus.Pending ? "completed" : "")">
                                                <i class="fas fa-shopping-cart"></i>
                                                <span>Order Placed</span>
                                            </div>
                                            
                                            <div class="progress-point preparing @(Model.Status >= OrderStatus.Preparing || (TimeZoneService.GetLocalTime() - TimeZoneService.ConvertFromUtc(Model.OrderDate)).TotalMinutes >= 10 ? "completed" : "")">
                                                <i class="fas fa-utensils"></i>
                                                <span>Preparing</span>
                                            </div>
                                            
                                            <div class="progress-point ready @(Model.Status >= OrderStatus.Ready || (TimeZoneService.GetLocalTime() - TimeZoneService.ConvertFromUtc(Model.OrderDate)).TotalMinutes >= 15 ? "completed" : "")">
                                                <i class="fas fa-clock"></i>
                                                <span>Ready</span>
                                            </div>
                                            
                                            <div class="progress-point delivery @(Model.Status >= OrderStatus.OutForDelivery || (TimeZoneService.GetLocalTime() - TimeZoneService.ConvertFromUtc(Model.OrderDate)).TotalMinutes >= 20 ? "completed" : "")">
                                                <i class="fas fa-truck"></i>
                                                <span>On the Way</span>
                                            </div>
                                            
                                            <div class="progress-point delivered @(Model.Status >= OrderStatus.Delivered || (TimeZoneService.GetLocalTime() - TimeZoneService.ConvertFromUtc(Model.OrderDate)).TotalMinutes >= 30 ? "completed" : "")">
                                                <i class="fas fa-home"></i>
                                                <span>Delivered</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="delivery-info-grid">
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-map-marker-alt"></i>
                                            </div>
                                            <div class="info-content">
                                                <h6>Delivery Address</h6>
                                                <p>@Model.DeliveryAddress</p>
                                            </div>
                                        </div>

                                        @if (!string.IsNullOrEmpty(Model.DeliveryInstructions))
                                        {
                                            <div class="info-card">
                                                <div class="info-icon">
                                                    <i class="fas fa-sticky-note"></i>
                                                </div>
                                                <div class="info-content">
                                                    <h6>Special Instructions</h6>
                                                    <p>@Model.DeliveryInstructions</p>
                                                </div>
                                            </div>
                                        }

                                        @if (Model.EstimatedDeliveryTime.HasValue)
                                        {
                                            <div class="info-card highlight">
                                                <div class="info-icon">
                                                    <i class="fas fa-clock"></i>
                                                </div>
                                                <div class="info-content">
                                                    <h6>Estimated Arrival</h6>
                                                    <p class="eta-time">@Model.EstimatedDeliveryTime.Value.ToString("h:mm tt")</p>
                                                    <small>@Model.EstimatedDeliveryTime.Value.ToString("MMM dd, yyyy")</small>
                                                </div>
                                            </div>
                                        }

                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-phone"></i>
                                            </div>
                                            <div class="info-content">
                                                <h6>Contact Number</h6>
                                                <p>@Model.CustomerPhone</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Enhanced Need Help Section -->
                        <div class="row">
                            <div class="col-12">
                                <div class="need-help-section">
                                    <div class="help-header">
                                        <i class="fas fa-headset me-2"></i>
                                        <h6>Need Help?</h6>
                                    </div>
                                    <p class="help-description">If you have any questions about your order, please contact us:</p>
                                    
                                    <div class="help-buttons">
                                        <a asp-controller="Home" asp-action="FAQ" class="help-btn faq-btn">
                                            <div class="btn-icon">
                                                <i class="fas fa-question-circle"></i>
                                            </div>
                                            <div class="btn-content">
                                                <span class="btn-title">FAQ</span>
                                                <small class="btn-subtitle">Common questions</small>
                                            </div>
                                        </a>
                                        
                                        <div class="help-btn contact-btn disabled">
                                            <div class="btn-icon">
                                                <i class="fas fa-headset"></i>
                                            </div>
                                            <div class="btn-content">
                                                <span class="btn-title">Quick Support</span>
                                                <small class="btn-subtitle">Chat widget coming soon</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@inject FoodOrderingSystem.Services.TimeZoneService TimeZoneService

@{
    int GetProgressPercentage(OrderStatus status)
    {
        // Calculate time-based progress for delivery using local time
        var currentLocalTime = TimeZoneService.GetLocalTime();
        var orderLocalTime = TimeZoneService.ConvertFromUtc(Model.OrderDate);
        var timeElapsed = currentLocalTime - orderLocalTime;
        var totalDeliveryTime = TimeSpan.FromMinutes(30); // 30 minutes total delivery time
        
        // If more than 30 minutes have passed, show as 100% (delivered)
        if (timeElapsed.TotalMinutes >= 30)
        {
            return 100;
        }
        
        var timeBasedProgress = (int)((timeElapsed.TotalMinutes / totalDeliveryTime.TotalMinutes) * 100);
        
        // Get status-based progress
        var statusProgress = status switch
        {
            OrderStatus.Pending => 10,
            OrderStatus.Confirmed => 20,
            OrderStatus.Preparing => 40,
            OrderStatus.Ready => 60,
            OrderStatus.OutForDelivery => 80,
            OrderStatus.Delivered => 100,
            _ => 0
        };
        
        // Return the higher of the two progress values
        // This ensures the progress bar moves forward even if status hasn't changed
        return Math.Max(statusProgress, timeBasedProgress);
    }
}

@section Scripts {
    <script>

        // Smart auto-refresh based on order status
        function autoRefreshOrder() {
            const orderStatus = '@Model.Status';
            let refreshInterval;

            // Different refresh intervals based on order status
            switch(orderStatus) {
                case 'Pending':
                case 'Confirmed':
                    refreshInterval = 60000; // 1 minute
                    break;
                case 'Preparing':
                case 'Ready':
                    refreshInterval = 30000; // 30 seconds
                    break;
                case 'OutForDelivery':
                    refreshInterval = 15000; // 15 seconds
                    break;
                case 'Delivered':
                case 'Cancelled':
                    return; // No auto-refresh for completed orders
                default:
                    refreshInterval = 30000; // Default 30 seconds
            }

            setTimeout(function() {
                // Check if page is still visible before refreshing
                if (!document.hidden) {
            location.reload();
                }
            }, refreshInterval);
        }

        // Start auto-refresh
        autoRefreshOrder();

        // Pause refresh when page is not visible
        document.addEventListener('visibilitychange', function() {
            if (!document.hidden) {
                autoRefreshOrder();
            }
        });

        // Add smooth scroll to sections
        document.addEventListener('DOMContentLoaded', function() {
            // Animate timeline items on load
            const timelineItems = document.querySelectorAll('.timeline-item.completed');
            timelineItems.forEach((item, index) => {
                setTimeout(() => {
                    item.style.opacity = '0';
                    item.style.transform = 'translateY(20px)';
                    item.style.transition = 'all 0.5s ease';
                    
                    setTimeout(() => {
                        item.style.opacity = '1';
                        item.style.transform = 'translateY(0)';
                    }, 100);
                }, index * 200);
            });
        });
    </script>
}
