@model FoodOrderingSystem.Controllers.OrderCancellationViewModel

@{
    ViewData["Title"] = "Cancel Order";
}

@section Styles {
    <link rel="stylesheet" href="~/css/orders.css" asp-append-version="true" />
    <style>
        .order-items .card {
            border: 1px solid #e9ecef;
            transition: all 0.2s ease;
        }
        
        .order-items .card:hover {
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .item-details {
            font-size: 0.9rem;
        }
        
        .card-title {
            font-size: 1rem;
            line-height: 1.3;
        }
        
        #cancelOrderForm .btn-lg {
            padding: 0.75rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
        }
        
        .alert-warning ul {
            padding-left: 1.2rem;
        }
        
        .alert-warning li {
            margin-bottom: 0.25rem;
        }
        
        .form-select:focus, .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        
        .is-valid {
            border-color: #198754;
        }
        
        .is-invalid {
            border-color: #dc3545;
        }
        
        .text-warning {
            color: #ffc107 !important;
        }
        
        @@media (max-width: 768px) {
            .order-items .col-md-6 {
                margin-bottom: 1rem;
            }
            
            #cancelOrderForm .d-flex {
                flex-direction: column;
                gap: 1rem;
            }
            
            #cancelOrderForm .btn-lg {
                width: 100%;
            }
        }
    </style>
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-times-circle me-2"></i>Cancel Order
                    </h4>
                </div>
                <div class="card-body">
                    <!-- Order Summary -->
                    <div class="order-summary mb-4">
                        <h5>Order Summary</h5>
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Order ID:</strong> #@Model.Order.Id</p>
                                <p><strong>Order Date:</strong> @Model.Order.OrderDate.ToString("MMM dd, yyyy HH:mm")</p>
                                <p><strong>Total Amount:</strong> RM @Model.Order.TotalAmount.ToString("F2")</p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Status:</strong> 
                                    <span class="badge bg-@(Model.Order.Status == OrderStatus.Pending ? "warning" : "info")">
                                        @Model.Order.Status
                                    </span>
                                </p>
                                <p><strong>Delivery Address:</strong> @Model.Order.DeliveryAddress</p>
                                @if (Model.Order.PointsUsed > 0)
                                {
                                    <p><strong>Points Used:</strong> @Model.Order.PointsUsed points</p>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="order-items mb-4">
                        <h6><i class="fas fa-shopping-bag me-2"></i>Order Items:</h6>
                        <div class="row">
                            @foreach (var item in Model.Order.OrderItems)
                            {
                                <div class="col-md-6 mb-3">
                                    <div class="card h-100">
                                        <div class="card-body p-3">
                                            <div class="row align-items-center">
                                                <div class="col-4">
                                                    <img src="@Url.Content(item.MenuItem.ImageUrl ?? "/images/placeholder-food.png")" 
                                                         class="img-fluid rounded" 
                                                         alt="@item.MenuItem.Name"
                                                         style="height: 80px; object-fit: cover; width: 100%;">
                                                </div>
                                                <div class="col-8">
                                                    <h6 class="card-title mb-2 text-truncate">@item.MenuItem.Name</h6>
                                                    <div class="item-details">
                                                        <div class="d-flex justify-content-between mb-1">
                                                            <span class="text-muted">Quantity:</span>
                                                            <span class="fw-bold">@item.Quantity</span>
                                                        </div>
                                                        <div class="d-flex justify-content-between mb-1">
                                                            <span class="text-muted">Unit Price:</span>
                                                            <span>RM @item.UnitPrice.ToString("F2")</span>
                                                        </div>
                                                        <div class="d-flex justify-content-between">
                                                            <span class="text-muted">Total:</span>
                                                            <span class="fw-bold text-primary">RM @((item.UnitPrice * item.Quantity).ToString("F2"))</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <hr />

                    <!-- Cancellation Form -->
                    <form asp-action="Cancel" asp-route-id="@Model.Order.Id" method="post" id="cancelOrderForm">
                        @Html.AntiForgeryToken()
                        
                        <div class="mb-4">
                            <label class="form-label">
                                <i class="fas fa-question-circle me-2"></i>
                                <strong>Why are you cancelling this order?</strong>
                                <span class="text-danger">*</span>
                            </label>
                            <select asp-for="SelectedReason" class="form-select" required>
                                <option value="">-- Select a reason --</option>
                                @foreach (var reason in Model.CancellationReasons)
                                {
                                    <option value="@reason">@GetReasonDisplayName(reason)</option>
                                }
                            </select>
                            <span asp-validation-for="SelectedReason" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">
                                <i class="fas fa-comment-alt me-2"></i>
                                <strong>Additional Details (Optional)</strong>
                            </label>
                            <textarea asp-for="AdditionalDetails" class="form-control" rows="4" 
                                      placeholder="Please provide any additional details about your cancellation..."
                                      maxlength="500"></textarea>
                            <div class="form-text">
                                <span class="text-muted">Maximum 500 characters</span>
                                <span class="float-end text-muted" id="charCount">0/500 characters</span>
                            </div>
                            <span asp-validation-for="AdditionalDetails" class="text-danger"></span>
                        </div>

                        <div class="alert alert-warning mb-4">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Important Notice:</strong>
                            <ul class="mb-0 mt-2">
                                <li>Once you cancel this order, it cannot be undone.</li>
                                @if (Model.Order.PointsUsed > 0)
                                {
                                    <li>Your <strong>@Model.Order.PointsUsed points</strong> will be refunded to your account.</li>
                                }
                                @if (Model.Order.Status == OrderStatus.Pending)
                                {
                                    <li>Since your order is still pending, cancellation is free of charge.</li>
                                }
                            </ul>
                        </div>

                        <div class="d-flex justify-content-between gap-3">
                            <a asp-action="History" class="btn btn-secondary btn-lg">
                                <i class="fas fa-arrow-left me-1"></i>Back to Orders
                            </a>
                            <button type="submit" class="btn btn-danger btn-lg" id="cancelBtn">
                                <i class="fas fa-times me-1"></i>Cancel Order
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetReasonDisplayName(CancellationReasonType reason)
    {
        return reason switch
        {
            CancellationReasonType.WrongDeliveryAddress => "Wrong delivery address",
            CancellationReasonType.WantToAddMoreItems => "Want to add more items",
            CancellationReasonType.ChangedMind => "Changed my mind",
            CancellationReasonType.FoundBetterDeal => "Found a better deal elsewhere",
            CancellationReasonType.DeliveryTimeTooLong => "Delivery time is too long",
            CancellationReasonType.PaymentIssues => "Payment issues",
            CancellationReasonType.ItemOutOfStock => "Item is out of stock",
            CancellationReasonType.Emergency => "Emergency situation",
            CancellationReasonType.Other => "Other reason",
            _ => reason.ToString()
        };
    }
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-resize textarea
            $('textarea').on('input', function() {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });

            // Character counter for textarea
            const textarea = $('#AdditionalDetails');
            const maxLength = 500;
            
            if (textarea.length) {
                textarea.on('input', function() {
                    const currentLength = $(this).val().length;
                    $('#charCount').text(currentLength + '/' + maxLength + ' characters');
                    
                    if (currentLength > maxLength * 0.9) {
                        $('#charCount').addClass('text-warning');
                    } else {
                        $('#charCount').removeClass('text-warning');
                    }
                });
            }

            // Enhanced form submission with better UX
            $('#cancelOrderForm').on('submit', function(e) {
                console.log('Form submission started');
                
                const selectedReason = $('#SelectedReason').val();
                if (!selectedReason) {
                    e.preventDefault();
                    alert('Please select a reason for cancellation.');
                    $('#SelectedReason').focus();
                    return false;
                }

                const confirmMessage = `Are you sure you want to cancel this order?\n\nReason: ${$('#SelectedReason option:selected').text()}\n\nThis action cannot be undone.`;
                
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                    console.log('User cancelled the confirmation');
                    return false;
                }
                
                console.log('User confirmed cancellation, submitting form');
                
                // If confirmed, allow form to submit naturally
                const submitBtn = $('#cancelBtn');
                const originalText = submitBtn.html();
                
                // Show loading state
                submitBtn.prop('disabled', true);
                submitBtn.html('<i class="fas fa-spinner fa-spin me-1"></i>Cancelling...');
                
                // Don't prevent default - let the form submit naturally
                // The form will submit to the server and redirect
                console.log('Form submitting to server...');
            });

            // Add validation styling
            $('#SelectedReason').on('change', function() {
                if ($(this).val()) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                }
            });
        });
    </script>
}
